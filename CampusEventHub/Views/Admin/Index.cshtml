@model IEnumerable<CampusEventHub.Models.Event>

<!DOCTYPE html>
<html>
<head>
    <title>Qu·∫£n l√Ω s·ª± ki·ªán</title>
</head>
<body>
<div class="container">
    <h1>
        Qu·∫£n l√Ω s·ª± ki·ªán
        <a href="@Url.Action("CreateEvent", "Admin")" class="btn btn-primary">
            ‚ûï T·∫°o s·ª± ki·ªán m·ªõi
        </a>
    </h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-error">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (TempData["WarningMessage"] != null)
    {
        <div class="alert alert-warning">
            ‚ö†Ô∏è @TempData["WarningMessage"]
        </div>
    }

    @if (Model != null && Model.Any())
    {
        <div class="events-grid">
            @foreach (var evt in Model)
            {
                var availableCount = evt.Seats.Count(s => s.Status == CampusEventHub.Models.SeatStatus.Available);
                var bookedCount = evt.Seats.Count(s => s.Status == CampusEventHub.Models.SeatStatus.Booked);
                var reservedCount = evt.Seats.Count(s => s.Status == CampusEventHub.Models.SeatStatus.Reserved);
                var isPast = evt.EventDate < DateTime.Now;

                <div class="event-card">
                    @if (!string.IsNullOrEmpty(evt.ImageUrl))
                    {
                        <img src="@evt.ImageUrl" alt="@evt.EventName" class="event-image" onerror="this.src='https://via.placeholder.com/350x200?text=No+Image'" />
                    }
                    else
                    {
                        <div class="event-image"></div>
                    }

                    <div class="event-content">
                        <div class="event-title">
                            @evt.EventName
                            @if (isPast)
                            {
                                <span class="badge badge-danger">ƒê√£ qua</span>
                            }
                            else if (availableCount == 0)
                            {
                                <span class="badge badge-warning">H·∫øt ch·ªó</span>
                            }
                            else
                            {
                                <span class="badge badge-success">C√≤n ch·ªó</span>
                            }
                        </div>

                        <div class="event-info">
                            üìÖ @evt.EventDate.ToString("dd/MM/yyyy HH:mm")
                        </div>

                        @if (!string.IsNullOrEmpty(evt.Location))
                        {
                            <div class="event-info">
                                üìç @evt.Location
                            </div>
                        }

                        <div class="event-info">
                            ‚≠ê @evt.TrainningPoint ƒëi·ªÉm r√®n luy·ªán
                        </div>

                        @if (!string.IsNullOrEmpty(evt.Description))
                        {
                            <div class="event-description">
                                @evt.Description
                            </div>
                        }

                        <div class="event-actions">
                            <a href="@Url.Action("EditEvent", "Admin", new { id = evt.EventId })"
                               class="btn btn-warning btn-sm">
                                ‚úèÔ∏è S·ª≠a
                            </a>

                            <a href="@Url.Action("ViewEventDetails", "Admin", new { id = evt.EventId })"
                               class="btn btn-info btn-sm">
                                üëÅÔ∏è Chi ti·∫øt
                            </a>

                            <form asp-action="DeleteEvent" asp-controller="Admin" method="post"
                                  style="display: inline;"
                                  onsubmit="return confirm('‚ö†Ô∏è B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·ª± ki·ªán n√†y?');">
                                <input type="hidden" name="id" value="@evt.EventId" />
                                <button type="submit" class="btn btn-danger btn-sm">
                                    üóëÔ∏è X√≥a
                                </button>
                            </form>
                        </div>
                    </div>

                    <div class="event-stats">
                        <div class="stat-item">
                            <span class="stat-number">@evt.Seats.Count</span>
                            <span class="stat-label">T·ªïng gh·∫ø</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number stat-available">@availableCount</span>
                            <span class="stat-label">C√≤n tr·ªëng</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number stat-booked">@bookedCount</span>
                            <span class="stat-label">ƒê√£ ƒë·∫∑t</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number stat-reserved">@reservedCount</span>
                            <span class="stat-label">B·ªã kh√≥a</span>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="no-events">
            <div class="no-events-icon">üìÖ</div>
            <h2>Ch∆∞a c√≥ s·ª± ki·ªán n√†o</h2>
            <p>H√£y t·∫°o s·ª± ki·ªán ƒë·∫ßu ti√™n c·ªßa b·∫°n!</p>
            <a href="@Url.Action("CreateEvent", "Admin")" class="btn btn-primary" style="margin-top: 20px;">
                ‚ûï T·∫°o s·ª± ki·ªán m·ªõi
            </a>
        </div>
    }
</div>
</body>
</html>