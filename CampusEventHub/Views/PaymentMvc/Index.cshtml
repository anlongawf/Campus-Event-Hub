@{
    ViewData["Title"] = "Nạp tiền vào ví";
}

<!DOCTYPE html>
<html>
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" rel="stylesheet" />

</head>
<body>
<div class="container">
    <div class="topup-card">
        <div class="card-header">
            <h3><i class="fa fa-wallet"></i> Nạp tiền vào ví</h3>
            <p>Thanh toán nhanh chóng và an toàn với PayOS</p>
        </div>

        <div class="card-body">
            <!-- Nhập số tiền -->
            <div class="mb-4">
                <label style="font-weight: 600; color: #555; font-size: 16px;">
                    <i class="fa fa-money-bill-wave"></i> Số tiền nạp
                </label>
                <input type="number"
                       id="amountInput"
                       class="amount-input"
                       placeholder="0"
                       min="2000"
                       value="50000">
                <p style="color: #999; font-size: 13px; margin-top: 10px; text-align: center;">
                    Số tiền tối thiểu: 2,000 VNĐ
                </p>

                <!-- Quick amounts -->
                <div class="quick-amounts">
                    <button type="button" class="quick-amount-btn" onclick="setAmount(10000)">10,000₫</button>
                    <button type="button" class="quick-amount-btn" onclick="setAmount(50000)">50,000₫</button>
                    <button type="button" class="quick-amount-btn" onclick="setAmount(100000)">100,000₫</button>
                    <button type="button" class="quick-amount-btn" onclick="setAmount(200000)">200,000₫</button>
                    <button type="button" class="quick-amount-btn" onclick="setAmount(500000)">500,000₫</button>
                    <button type="button" class="quick-amount-btn" onclick="setAmount(1000000)">1,000,000₫</button>
                </div>
            </div>

            <!-- Mô tả tự động -->
            <div class="mb-4">
                <label style="font-weight: 600; color: #555;">
                    <i class="fa fa-file-alt"></i> Nội dung giao dịch
                </label>
                <div class="description-display" id="descriptionDisplay">
                    Đang tạo mô tả...
                </div>
                <p style="color: #999; font-size: 13px; text-align: center;">
                    Mô tả tự động dựa trên thời gian hiện tại
                </p>
            </div>

            <!-- Button thanh toán -->
            <button type="button" id="btnPay" class="btn-pay" onclick="createPayment()">
                <i class="fa fa-credit-card"></i> Thanh toán ngay
            </button>

            <!-- Loading -->
            <div class="loading-spinner" id="loadingSpinner">
                <div class="spinner"></div>
                <p style="margin-top: 15px; color: #667eea; font-weight: 600;">
                    Đang tạo link thanh toán...
                </p>
            </div>

            <!-- Error -->
            <div class="error-message" id="errorMessage"></div>
        </div>
    </div>
</div>

<script>
    // Cập nhật mô tả theo thời gian
    function updateDescription() {
        const now = new Date();
        const dateStr = now.toLocaleDateString('vi-VN', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
        });
        const description = `Nap tien ${dateStr}`;
        document.getElementById('descriptionDisplay').textContent = description;
        return description;
    }

    // Set số tiền
    function setAmount(amount) {
        document.getElementById('amountInput').value = amount;
    }

    // Update mỗi giây
    setInterval(updateDescription, 1000);
    updateDescription();

    // Tạo thanh toán
    async function createPayment() {
        const amount = parseFloat(document.getElementById('amountInput').value);
        const description = updateDescription();

        const btnPay = document.getElementById('btnPay');
        const loadingSpinner = document.getElementById('loadingSpinner');
        const errorMessage = document.getElementById('errorMessage');

        if (!amount || amount < 2000) {
            errorMessage.textContent = 'Số tiền phải từ 2,000 VNĐ trở lên!';
            errorMessage.style.display = 'block';
            return;
        }

        btnPay.disabled = true;
        btnPay.style.display = 'none';
        loadingSpinner.style.display = 'block';
        errorMessage.style.display = 'none';

        try {
            const response = await fetch('/api/Payment/CreatePaymentUrl', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    moneyToPay: amount,
                    description: description
                })
            });

            const data = await response.json();

            if (response.ok && data.paymentUrl) {
                window.location.href = data.paymentUrl;
            } else {
                errorMessage.textContent = data.message || 'Không thể tạo link thanh toán!';
                errorMessage.style.display = 'block';
                btnPay.disabled = false;
                btnPay.style.display = 'block';
                loadingSpinner.style.display = 'none';
            }
        } catch (error) {
            errorMessage.textContent = 'Có lỗi xảy ra: ' + error.message;
            errorMessage.style.display = 'block';
            btnPay.disabled = false;
            btnPay.style.display = 'block';
            loadingSpinner.style.display = 'none';
        }
    }

    // Enter để submit
    document.getElementById('amountInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') createPayment();
    });
</script>
</body>
</html>